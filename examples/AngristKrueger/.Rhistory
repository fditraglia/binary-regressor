}
# Calculate various estimators
est <- function(inData){
OLS <- with(inData, cov(x,y)/var(x))
IV <- with(inData, cov(z,y)/cov(z,x))
dat0 <- subset(inData, z == 0)
dat1 <- subset(inData, z == 1)
p1_hat <- mean(dat1$x)
p0_hat <- mean(dat0$x)
W <- IV
Dy2 <- mean(dat1$y^2) - mean(dat0$y^2)
DyT <- mean(dat1$y * dat1$x) - mean(dat0$y * dat0$x)
R <- (Dy2 - 2 * W * DyT) / (W * (p1_hat - p0_hat))
a1_a0 <- 1 + R/W
Dy3 <- mean(dat1$y^3) - mean(dat0$y^3)
Dy2T <- mean(dat1$y^2 * dat1$x) - mean(dat0$y^2 * dat0$x)
S <- (Dy3 - 3 * W * (Dy2T + R * DyT)) / (W * (p1_hat - p0_hat))
term1 <- -0.5 * R/W
disc <- sqrt(3 * R^2 - 2 * S)
term2 <- 0.5 * disc/W
root1 <- term1 + term2
root2 <- term1 - term2
out <- c(OLS, IV, a1_a0, root1, root2)
names(out) <- c("OLS", "IV", "a1_a0", "root1", "root2")
return(out)
}
set.seed(8372)
sim <- t(replicate(5000, est(dgp(0.0, 0.3))))
warnings()
sim <- t(replicate(5000, est(dgp(0.0, 0.3))))
set.seed(8372)
sim <- t(replicate(5000, est(dgp(0.0, 0.3))))
sim <- as.data.frame(sim)
mean(sim$a1_a0)
qqnorm(sim$a1_a0)
qqline(sim$a1_a0)
head(sim)
hist(sim$root1)
hist(sim$root2)
mean(sim$root2)
mean(sim$root2, na.rm = TRUE)
mean(sim$root1, na.rm = TRUE)
1 - 0.3
# and non-differential measurement error
# A selection model with randomly assigned offer of treatment
# and non-differential measurement error
dgp <- function(a0, a1, b = 2, c = 0.5, g0 = -1, g1 = 5, s_noise = 1,
s_ability = 1, q = 0.5, n = 500){
z <- rbinom(n, 1, q) #offer of treatment
ability <- rnorm(n, 0, s_ability)
xstar <- as.numeric(g0 + g1 * z + ability > 0) #select into treatment
e <- rnorm(n, 0, s_noise) + ability
y <- c + b * xstar + e
#mis-classification
x <- (1 - xstar) * rbinom(n, 1, a0) + xstar * rbinom(n, 1, 1 - a1)
return(data.frame(x, y, z))
}
# Calculate various estimators
est <- function(inData){
OLS <- with(inData, cov(x,y)/var(x))
IV <- with(inData, cov(z,y)/cov(z,x))
dat0 <- subset(inData, z == 0)
dat1 <- subset(inData, z == 1)
p1_hat <- mean(dat1$x)
p0_hat <- mean(dat0$x)
W <- IV
Dy2 <- mean(dat1$y^2) - mean(dat0$y^2)
DyT <- mean(dat1$y * dat1$x) - mean(dat0$y * dat0$x)
R <- (Dy2 - 2 * W * DyT) / (W * (p1_hat - p0_hat))
a1_a0 <- 1 + R/W
Dy3 <- mean(dat1$y^3) - mean(dat0$y^3)
Dy2T <- mean(dat1$y^2 * dat1$x) - mean(dat0$y^2 * dat0$x)
S <- (Dy3 - 3 * W * (Dy2T + R * DyT)) / (W * (p1_hat - p0_hat))
term1 <- -0.5 * R/W
disc <- sqrt(3 * R^2 - 2 * S)
term2 <- 0.5 * disc/W
root1 <- term1 + term2
root2 <- term1 - term2
out <- c(OLS, IV, a1_a0, root1, root2)
names(out) <- c("OLS", "IV", "a1_a0", "root1", "root2")
return(out)
}
set.seed(8372)
sim <- t(replicate(5000, est(dgp(0.0, 0.3))))
sim <- as.data.frame(sim)
mean(sim$a1_a0)
qqnorm(sim$a1_a0)
qqline(sim$a1_a0)
mean(sim$root1)
mean(sim$root1, na.rm = TRUE)
mean(sim$root2, na.rm = TRUE)
hist(sim$root2)
hist(sim$root1)
set.seed(8372)
sim <- t(replicate(5000, est(dgp(0.15, 0.3))))
sim <- as.data.frame(sim)
mean(sim$a1_a0)
qqnorm(sim$a1_a0)
qqline(sim$a1_a0)
mean(sim$root1, na.rm = TRUE)
mean(sim$root2, na.rm = TRUE)
hist(sim$root1)
hist(sim$root2)
set.seed(8372)
sim <- t(replicate(5000, est(dgp(0.1, 0.3))))
sim <- as.data.frame(sim)
mean(sim$a1_a0)
qqnorm(sim$a1_a0)
qqline(sim$a1_a0)
mean(sim$root1, na.rm = TRUE)
mean(sim$root2, na.rm = TRUE)
hist(sim$root1)
hist(sim$root2)
hist(sim$a1_a0)
set.seed(8372)
sim <- t(replicate(5000, est(dgp(0, 0))))
sim <- as.data.frame(sim)
mean(sim$a1_a0)
hist(sim$a1_a0)
qqnorm(sim$a1_a0)
qqline(sim$a1_a0)
mean(sim$root1, na.rm = TRUE)
mean(sim$root2, na.rm = TRUE)
hist(sim$root1)
hist(sim$root2)
quantile(sim$a1_a0, c(0.5, 0.95))
quantile(sim$a1_a0, c(0.05, 0.95))
set.seed(8372)
sim <- t(replicate(5000, est(dgp(0.1, 0.1))))
sim <- as.data.frame(sim)
mean(sim$a1_a0)
hist(sim$a1_a0)
qqnorm(sim$a1_a0)
qqline(sim$a1_a0)
mean(sim$root1, na.rm = TRUE)
mean(sim$root2, na.rm = TRUE)
hist(sim$root1)
hist(sim$root2)
quantile(sim$a1_a0, c(0.05, 0.95))
set.seed(8372)
sim <- t(replicate(5000, est(dgp(0.1, 0.3))))
sim <- as.data.frame(sim)
mean(sim$a1_a0)
hist(sim$a1_a0)
qqnorm(sim$a1_a0)
qqline(sim$a1_a0)
mean(sim$root1, na.rm = TRUE)
mean(sim$root2, na.rm = TRUE)
hist(sim$root1)
hist(sim$root2)
rm(list = ls())
# A selection model with randomly assigned offer of treatment
# and non-differential measurement error
dgp <- function(a0, a1, b = 2, c = 0.5, g0 = -1, g1 = 5, s_noise = 1,
s_ability = 1, q = 0.5, n = 500){
z <- rbinom(n, 1, q) #offer of treatment
ability <- rnorm(n, 0, s_ability)
xstar <- as.numeric(g0 + g1 * z + ability > 0) #select into treatment
e <- rnorm(n, 0, s_noise) + ability
y <- c + b * xstar + e
#mis-classification
x <- (1 - xstar) * rbinom(n, 1, a0) + xstar * rbinom(n, 1, 1 - a1)
return(data.frame(x, y, z))
}
# Calculate various estimators
est <- function(inData){
OLS <- with(inData, cov(x,y)/var(x))
IV <- with(inData, cov(z,y)/cov(z,x))
dat0 <- subset(inData, z == 0)
dat1 <- subset(inData, z == 1)
p1_hat <- mean(dat1$x)
p0_hat <- mean(dat0$x)
W <- IV
Dy2 <- mean(dat1$y^2) - mean(dat0$y^2)
DyT <- mean(dat1$y * dat1$x) - mean(dat0$y * dat0$x)
R <- (Dy2 - 2 * W * DyT) / (W * (p1_hat - p0_hat))
a1_a0 <- 1 + R/W
Dy3 <- mean(dat1$y^3) - mean(dat0$y^3)
Dy2T <- mean(dat1$y^2 * dat1$x) - mean(dat0$y^2 * dat0$x)
S <- (Dy3 - 3 * W * (Dy2T + R * DyT)) / (W * (p1_hat - p0_hat))
term1 <- -0.5 * R/W
disc <- sqrt(3 * R^2 - 2 * S)
term2 <- 0.5 * disc/W
root1 <- term1 + term2
root2 <- term1 - term2
out <- c(OLS, IV, a1_a0, root1, root2)
names(out) <- c("OLS", "IV", "a1_a0", "root1", "root2")
return(out)
}
set.seed(8372)
sim <- t(replicate(5000, est(dgp(0.1, 0.6))))
sim <- as.data.frame(sim)
mean(sim$a1_a0)
hist(sim$a1_a0)
qqnorm(sim$a1_a0)
qqline(sim$a1_a0)
mean(sim$root1, na.rm = TRUE)
mean(sim$root2, na.rm = TRUE)
hist(sim$root1)
hist(sim$root2)
# and non-differential measurement error
dgp <- function(a0, a1, b = 2, c = 0.5, g0 = -1, g1 = 5, s_noise = 1,
s_ability = 1, q = 0.5, n = 200){
z <- rbinom(n, 1, q) #offer of treatment
ability <- rnorm(n, 0, s_ability)
xstar <- as.numeric(g0 + g1 * z + ability > 0) #select into treatment
e <- rnorm(n, 0, s_noise) + ability
y <- c + b * xstar + e
#mis-classification
x <- (1 - xstar) * rbinom(n, 1, a0) + xstar * rbinom(n, 1, 1 - a1)
return(data.frame(x, y, z))
}
# Calculate various estimators
est <- function(inData){
OLS <- with(inData, cov(x,y)/var(x))
IV <- with(inData, cov(z,y)/cov(z,x))
dat0 <- subset(inData, z == 0)
dat1 <- subset(inData, z == 1)
p1_hat <- mean(dat1$x)
p0_hat <- mean(dat0$x)
W <- IV
Dy2 <- mean(dat1$y^2) - mean(dat0$y^2)
DyT <- mean(dat1$y * dat1$x) - mean(dat0$y * dat0$x)
R <- (Dy2 - 2 * W * DyT) / (W * (p1_hat - p0_hat))
a1_a0 <- 1 + R/W
Dy3 <- mean(dat1$y^3) - mean(dat0$y^3)
Dy2T <- mean(dat1$y^2 * dat1$x) - mean(dat0$y^2 * dat0$x)
S <- (Dy3 - 3 * W * (Dy2T + R * DyT)) / (W * (p1_hat - p0_hat))
term1 <- -0.5 * R/W
disc <- sqrt(3 * R^2 - 2 * S)
term2 <- 0.5 * disc/W
root1 <- term1 + term2
root2 <- term1 - term2
out <- c(OLS, IV, a1_a0, root1, root2)
names(out) <- c("OLS", "IV", "a1_a0", "root1", "root2")
return(out)
}
rm(list = ls())
dgp <- function(a0, a1, b = 2, c = 0.5, g0 = -1, g1 = 5, s_noise = 1,
s_ability = 1, q = 0.5, n = 200){
z <- rbinom(n, 1, q) #offer of treatment
ability <- rnorm(n, 0, s_ability)
xstar <- as.numeric(g0 + g1 * z + ability > 0) #select into treatment
e <- rnorm(n, 0, s_noise) + ability
y <- c + b * xstar + e
#mis-classification
x <- (1 - xstar) * rbinom(n, 1, a0) + xstar * rbinom(n, 1, 1 - a1)
return(data.frame(x, y, z))
}
# Calculate various estimators
est <- function(inData){
OLS <- with(inData, cov(x,y)/var(x))
IV <- with(inData, cov(z,y)/cov(z,x))
dat0 <- subset(inData, z == 0)
dat1 <- subset(inData, z == 1)
p1_hat <- mean(dat1$x)
p0_hat <- mean(dat0$x)
W <- IV
Dy2 <- mean(dat1$y^2) - mean(dat0$y^2)
DyT <- mean(dat1$y * dat1$x) - mean(dat0$y * dat0$x)
R <- (Dy2 - 2 * W * DyT) / (W * (p1_hat - p0_hat))
a1_a0 <- 1 + R/W
Dy3 <- mean(dat1$y^3) - mean(dat0$y^3)
Dy2T <- mean(dat1$y^2 * dat1$x) - mean(dat0$y^2 * dat0$x)
S <- (Dy3 - 3 * W * (Dy2T + R * DyT)) / (W * (p1_hat - p0_hat))
term1 <- -0.5 * R/W
disc <- sqrt(3 * R^2 - 2 * S)
term2 <- 0.5 * disc/W
root1 <- term1 + term2
root2 <- term1 - term2
out <- c(OLS, IV, a1_a0, root1, root2)
names(out) <- c("OLS", "IV", "a1_a0", "root1", "root2")
return(out)
}
set.seed(8372)
sim <- t(replicate(5000, est(dgp(0.1, 0.6))))
sim <- as.data.frame(sim)
mean(sim$a1_a0)
hist(sim$a1_a0)
qqnorm(sim$a1_a0)
qqline(sim$a1_a0)
mean(sim$root1, na.rm = TRUE)
mean(sim$root2, na.rm = TRUE)
hist(sim$root1)
hist(sim$root2)
mean(sim$a1_a0)
hist(sim$a1_a0)
qqnorm(sim$a1_a0)
qqline(sim$a1_a0)
mean(sim$root1, na.rm = TRUE)
mean(sim$root2, na.rm = TRUE)
hist(sim$root1)
hist(sim$root2)
mean(sim$a1_a0)
hist(sim$a1_a0)
quantile(sim$a1_a0, c(0.05, 0.95))
quantile(sim$a1_a0, c(0.05, 0.95))
qqnorm(sim$a1_a0)
qqline(sim$a1_a0)
set.seed(8372)
sim <- t(replicate(5000, est(dgp(0.1, 0.2))))
sim <- as.data.frame(sim)
mean(sim$a1_a0)
hist(sim$a1_a0)
quantile(sim$a1_a0, c(0.05, 0.95))
qqnorm(sim$a1_a0)
qqline(sim$a1_a0)
mean(sim$root1, na.rm = TRUE)
mean(sim$root2, na.rm = TRUE)
hist(sim$root1)
hist(sim$root1)
hist(sim$root2)
hist(sim$root1)
qqplot(sim$root1)
qqplot(sim$root1)
qnorm(sim$root1)
qqnorm(sim$root1)
qqline(sim$root1)
hist(sim$root2)
qqnorm(sim$root2)
qqline(sim$root2)
setwd("~/binary-regressor/examples/AngristKrueger/")
library(foreign)
cps_raw <- read.dta("extract.dta")
labels <- attributes(cps_raw)$var.labels
cbind(names(cps_raw), labels)
# Subset of people born between 1950 and 1953
cps <- subset(cps_raw, (yob50 == 1) |
(yob51 == 1) |
(yob52 == 1) |
(yob53 == 1))
# Whites only: 1 = white
cps <- subset(cps, race == 1)
rm(cps_raw)
# Construct binary instrument: 1(draft lottery number < 100)
#   lott1 = 1(lottery number <= 25)
#   lott2 = 1(25 < lottery number <= 50)
#   lott3 = 1(50 < lottery number <= 75)
#   lott4 = 1(75 < lottery number <= 100)
cps$lowlott <- with(cps, lott1 + lott2 + lott3 + lott4)
# Construct weekly wage by dividing annual wage by weeks worked
cps$weekwage <- with(cps, annwage / weeks)
# No covariates dataset
nocovar <- with(cps, data.frame(x = veteran, z = lowlott, y = scale(annwage)))
hist(nocovar)
hist(nocovar$y)
setwd("~/binary-regressor/examples/AngristKrueger/")
library(foreign)
cps_raw <- read.dta("extract.dta")
labels <- attributes(cps_raw)$var.labels
cbind(names(cps_raw), labels)
# Subset of people born between 1950 and 1953
cps <- subset(cps_raw, (yob50 == 1) |
(yob51 == 1) |
(yob52 == 1) |
(yob53 == 1))
# Whites only: 1 = white
cps <- subset(cps, race == 1)
rm(cps_raw)
table(cps$year)
rm(list = ls())
setwd("~/binary-regressor/examples/AngristKrueger/")
library(foreign)
cps_raw <- read.dta("extract.dta")
labels <- attributes(cps_raw)$var.labels
cbind(names(cps_raw), labels)
# Subset of people born between 1950 and 1953
cps <- subset(cps_raw, (yob50 == 1) |
(yob51 == 1) |
(yob52 == 1) |
(yob53 == 1))
# Whites only: 1 = white
cps <- subset(cps, race == 1)
rm(cps_raw)
## CPI obtained from inflation calculator
# http://www.bls.gov/data/inflation_calculator.htm
# $1 in 1979 = $1.00 in 1979
#----NO DATA FOR 1980 in cps!-----
# $1 in 1981 = $0.80 in 1979
# $1 in 1982 = $0.75 in 1979
# $1 in 1983 = $0.73 in 1979
# $1 in 1984 = $0.70 in 1979
# $1 in 1985 = $0.67 in 1979
# Convert nominal annual wage to real
cps$rannwage <- with(cps, annwage * ((year == 79) * 1.00 +
(year == 81) * 0.80 +
(year == 82) * 0.75 +
(year == 83) * 0.73 +
(year == 84) * 0.70 +
(year == 85) * 0.67)))
# Convert nominal annual wage to real
cps$rannwage <- with(cps, annwage * ((year == 79) * 1.00 +
(year == 81) * 0.80 +
(year == 82) * 0.75 +
(year == 83) * 0.73 +
(year == 84) * 0.70 +
(year == 85) * 0.67))
rm(list = ls())
setwd("~/binary-regressor/examples/AngristKrueger/")
library(foreign)
cps_raw <- read.dta("extract.dta")
labels <- attributes(cps_raw)$var.labels
cbind(names(cps_raw), labels)
# Subset of people born between 1950 and 1953
cps <- subset(cps_raw, (yob50 == 1) |
(yob51 == 1) |
(yob52 == 1) |
(yob53 == 1))
# Whites only: 1 = white
cps <- subset(cps, race == 1)
rm(cps_raw)
# Construct binary instrument: 1(draft lottery number < 100)
#   lott1 = 1(lottery number <= 25)
#   lott2 = 1(25 < lottery number <= 50)
#   lott3 = 1(50 < lottery number <= 75)
#   lott4 = 1(75 < lottery number <= 100)
cps$lowlott <- with(cps, lott1 + lott2 + lott3 + lott4)
## CPI obtained from inflation calculator
# http://www.bls.gov/data/inflation_calculator.htm
# $1 in 1979 = $1.00 in 1979
#----NO DATA FOR 1980 in cps!-----
# $1 in 1981 = $0.80 in 1979
# $1 in 1982 = $0.75 in 1979
# $1 in 1983 = $0.73 in 1979
# $1 in 1984 = $0.70 in 1979
# $1 in 1985 = $0.67 in 1979
# Convert nominal annual wage to real
cps$rannwage <- with(cps, annwage * ((year == 79) * 1.00 +
(year == 81) * 0.80 +
(year == 82) * 0.75 +
(year == 83) * 0.73 +
(year == 84) * 0.70 +
(year == 85) * 0.67))
# Construct real weekly earnings
# (Set weekly wage to zero for the 266 individuals with zero weeks worked but
#  positive annual earnings.)
cps$rwwage <- with(cps, (weeks > 0) * rannwage / pmax(1, weeks))
cps1 <- with(cps, data.frame("y" = log(rannwage + 1), "x" = veteran, "z" = lowlott))
cps2 <- with(cps, data.frame("y" = log(rwwage + 1), "x" = veteran, "z" = lowlott))
hist(subset(cps1, z == 1)$y)
hist(subset(cps1, z == 0)$y)
# Calculate various estimators
est <- function(inData){
OLS <- with(inData, cov(x,y)/var(x))
IV <- with(inData, cov(z,y)/cov(z,x))
dat0 <- subset(inData, z == 0)
dat1 <- subset(inData, z == 1)
p1_hat <- mean(dat1$x)
p0_hat <- mean(dat0$x)
W <- IV
Dy2 <- mean(dat1$y^2) - mean(dat0$y^2)
DyT <- mean(dat1$y * dat1$x) - mean(dat0$y * dat0$x)
R <- (Dy2 - 2 * W * DyT) / (W * (p1_hat - p0_hat))
a1_a0 <- 1 + R/W
Dy3 <- mean(dat1$y^3) - mean(dat0$y^3)
Dy2T <- mean(dat1$y^2 * dat1$x) - mean(dat0$y^2 * dat0$x)
S <- (Dy3 - 3 * W * (Dy2T + R * DyT)) / (W * (p1_hat - p0_hat))
term1 <- -0.5 * R/W
disc <- sqrt(3 * R^2 - 2 * S)
term2 <- 0.5 * disc/W
root1 <- term1 + term2
root2 <- term1 - term2
out <- c(OLS, IV, a1_a0, root1, root2)
names(out) <- c("OLS", "IV", "a1_a0", "root1", "root2")
return(out)
}
est(cps1)
est(cps2)
est(subset(cps1, y > 0))
est(subset(cps2, y > 0))
est(subset(cps1, y > 4))
est(subset(cps2, y > 4))
est(subset(cps1, y > 5))
est(subset(cps2, y > 5))
est(subset(cps1, y > 6))
est(subset(cps2, y > 6))
cps1 <- with(cps, data.frame("y" = log(rannwage + 1), "x" = veteran, "z" = lowlott))
cps2 <- with(cps, data.frame("y" = log(rwwage + 1), "x" = veteran, "z" = lowlott))
cps1 <- with(cps, data.frame("y" = rannwage, "x" = veteran, "z" = lowlott))
cps4 <- with(cps, data.frame("y" = rwage, "x" = veteran, "z" = lowlott))
cps4 <- with(cps, data.frame("y" = rwwage, "x" = veteran, "z" = lowlott))
cps1 <- with(cps, data.frame("y" = log(rannwage + 1), "x" = veteran, "z" = lowlott))
cps2 <- with(cps, data.frame("y" = log(rwwage + 1), "x" = veteran, "z" = lowlott))
cps3 <- with(cps, data.frame("y" = rannwage, "x" = veteran, "z" = lowlott))
cps4 <- with(cps, data.frame("y" = rwwage, "x" = veteran, "z" = lowlott))
hist(subset(cps1, z == 0)$y)
hist(subset(cps3, z == 0)$y)
hist(subset(cps3, z == 1)$y)
est(subset(cps2, y < quantile(cps2$y, 0.9)))
est(subset(cps3, y < quantile(cps2$y, 0.9)))
est(subset(cps3, y < quantile(cps3$y, 0.9)))
est(subset(cps3, y > quantile(cps3$y, 0.1) & y < quantile(cps3$y, 0.9)))
quantile(subset(cps3, z == 0)$y, 1:9/10)
quantile(subset(cps3, z == 1)$y, 1:9/10)
q0 <- quantile(subset(cps3, z == 0)$y, 1:9/10)
q1 <- quantile(subset(cps3, z == 1)$y, 1:9/10)
plot(q0, q1)
abline(0,1)
q0 <- quantile(subset(cps3, z == 0)$y, 1:99/100)
q1 <- quantile(subset(cps3, z == 1)$y, 1:90/100)
plot(q0, q1)
q0 <- quantile(subset(cps3, z == 0)$y, 1:99/100)
q1 <- quantile(subset(cps3, z == 1)$y, 1:99/100)
plot(q0, q1)
abline(0,1)
est(subset(cps3, y < 10000))
est(subset(cps3, y > 0 & y < 10000))
est(subset(cps3, y > 0 & y < 20000))
est(subset(cps3, y > 1000 & y < 20000))
est(subset(cps3, y > 1000 & y < 10000))
est(subset(cps3, y > 5000 & y < 10000))
rm(list = ls())

#Empirical Example
#Card Data without Covariates
(Last Updated 2 June 2015)

library("lattice");
library("fBasics")

Data<-read.table(file="CARD.raw", header=TRUE, sep=",");
carddata0<-data.frame( "Z2" = Data$nearc2, "Z4" = Data$nearc4, "edu" = Data$educ, "Y" = Data$lwage, "SMSA" = Data$smsa, "SMSA66"=Data$smsa66, "black" = Data$black, "south" = Data$south, "south66"=Data$south66, "fatheduc"=Data$fatheduc, "motheduc"=Data$motheduc, "parenteduc"=Data$fatheduc+Data$motheduc);

N<-length(carddata0$Y);

D<-rep(0,N)  #Indicator for 4-year college degree
for(i in 1:N){ if(carddata0$edu[i]>=16) D[i]<-1}; 
Z4<-carddata0$Z4;

#carddata<-data.frame("Y"=carddata0$Y, "D"=D, "Z"=carddata0$Z2);
carddata<-data.frame("Y"=carddata0$Y, "D"=D, "Z"=Z4);

N<-length(carddata$Y);
m<-length(subset(carddata$Y,carddata$Z==1));
n<-length(subset(carddata$Y,carddata$Z==0));
lambda<-m/N;

####################draw the subdensities

p1<-sum(subset(carddata$D,carddata$Z==1))/m
p0<-sum(subset(carddata$D,carddata$Z==0))/n

Yd1z1<-subset(carddata$Y,(carddata$D==1)&(carddata$Z==1));
Yd1z0<-subset(carddata$Y,(carddata$D==1)&(carddata$Z==0));
Yd0z1<-subset(carddata$Y,(carddata$D==0)&(carddata$Z==1));
Yd0z0<-subset(carddata$Y,(carddata$D==0)&(carddata$Z==0));

m1<-length(Yd1z1)
m0<-length(Yd0z1)

n1<-length(Yd1z0)
n0<-length(Yd0z0)


fromYd1<-min(quantile(Yd1z1,p=0.005),quantile(Yd1z0,p=0.005));
toYd1<-max(Yd1z1,Yd1z0);
fromYd0<-min(quantile(Yd0z1,p=0.005),quantile(Yd0z0,p=0.005));
toYd0<-max(Yd0z1,Yd0z0);

evalpoints<-2048;

kerneld1z1<-density(Yd1z1, bw=0.08, n=evalpoints,from = fromYd1, to =toYd1);
kerneld1z0<-density(Yd1z0, bw=0.08, n=evalpoints,from = fromYd1, to =toYd1);
kerneld0z1<-density(Yd0z1, bw=0.08, n=evalpoints,from = fromYd0, to =toYd0);
kerneld0z0<-density(Yd0z0, bw=0.08, n=evalpoints,from = fromYd0, to =toYd0);

ysup1<-kerneld1z1$x;
ysup0<-kerneld0z1$x;

fd1z1<-kerneld1z1$y;
fd1z0<-kerneld1z0$y;
fd0z1<-kerneld0z1$y;
fd0z0<-kerneld0z0$y;


densd1z0<-cbind(ysup1,p0*fd1z0,1,2);
densd1z1<-cbind(ysup1,p1*fd1z1,1,1);
#normdensd1<-cbind(ysup1,dnorm(ysup1,mean(Yd1z1),sd(Yd1z1)+0.1),1,3);
densd0z0<-cbind(ysup0,(1-p0)*fd0z0,2,2);
densd0z1<-cbind(ysup0,(1-p1)*fd0z1,2,1);
#normdensd0<-cbind(ysup0,dnorm(ysup0,mean(Yd0z1),sd(Yd0z1)+0.05),2,3);

#############Figure 4 in the main text################

figure<-rbind(densd0z1,densd1z1,densd0z0,densd1z0);
Figure<-data.frame(x=as.numeric(figure[,1]),y=as.numeric(figure[,2]),D=factor(figure[,3],labels=c("Y1: Treated Outcome","Y0: Control Outcome")),Z=factor(figure[,4],labels=c("Z=1","Z=0")));

key.dens<-list(space="bottom",text=list(c("Z=1: Near College","Z=0: No college nearby")), lines=list(lty=c(1,2),lwd=c(2,2),col=c("black","black")) );
xyplot(y~x | D, data=Figure, groups = Z, type="l",lty=c(1,2),lwd=c(2,2),col="black",xlim=c(5.2,7.5),ylim=c(0,0.8),aspect=1,xlab="Y: Logarithm of weekly earnings",ylab="probability density",key=key.dens,between=list(x=0.5,y=0.5),as.table=TRUE)



plot(ysup1,fd1z1*p1,col="red",type="l",ylab="density",xlab="Y(1)",main="Card(1993) Data, Treated Outcome")
lines(ysup1,fd1z0*p0, col="blue",lty="dashed");
legend(5.2,0.8,"Z=1:near college",lty="solid", col="red", bty = "n");
legend(5.2,0.75,"Z=0:no college",lty="dashed", col="blue",bty="n");

m
m1
n1

plot(ysup0,fd0z0*(1-p0), col="blue",lty="dashed",type="l",ylab="density",xlab="Y(0)",main="Card(1993) Data, Control Outcome")
lines(ysup0,fd0z1*(1-p1), col="red");
legend(5.2,0.84,"Z=1:near college",lty="solid", col="red", bty = "n");
legend(5.2,0.78,"Z=0:no college",lty="dashed", col="blue",bty="n");


################################################################
#################Calculate the p-values


#Rearrange the original data

carddataz1<-subset(carddata, carddata$Z==1);
carddataz0<-subset(carddata, carddata$Z==0);

pooldata<-as.matrix(rbind(carddataz1,carddataz0));



#Defining trimming constants
xis <- c(sqrt(0.005*(1-0.005)),sqrt(0.05*(1-0.05)),sqrt(0.1*(1-0.1)),1);
xiN<-length(xis);
B<-500;  #Bootstrap iterations
size1<-1;  #The grid steps
size0<-1;
Tw<-rep(0,xiN);
pval<-rep(0,xiN);

grids<-generate.grids.coarse(data=pooldata,size1,size0);


for(k in 1:xiN){
               xi<-xis[k]
               Tw[k]<-compute.stat.grids.H(pooldata,m,n,grids,lambda,xi)
               pval[k]<-boot.pval(pooldata,m,n,lambda,B,xi,size1,size0,teststat=Tw[k])
}

xis
Tw
pval
